@code {
    /// <summary>
    /// Captures all the unmatched tags written by user. All this tags will be rendered in
    /// the container element of each component
    /// </summary>
    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> Attributes { get; set; }

    /// <summary>
    /// Gets or sets the color mode for this component. The defaul 
    /// color mode is Light.
    /// </summary>
    [Parameter] public ColorMode? ColorMode { get; set; }

    /// <summary>
    /// Returns the selected color mode as a string value
    /// </summary>
    /// <returns></returns>
    protected string? GetColorMode()
    {
        if (ColorMode != null)
            return ColorMode.Value.ToString().ToLower();

        return null;
    }

    protected override void OnParametersSet()
    {
        if (Attributes != null)
        {
            if (Attributes.ContainsKey("class"))
                Attributes.Remove("class");
        }
    }

    protected void TryAddAttribute(string key, object? value)
    {
        if (Attributes == null)
            Attributes = new Dictionary<string, object>();

        if (value != null)
        {
            if (Attributes.ContainsKey(key))
                Attributes[key] = value;
            else
                Attributes.Add(key, value);
        }
    }
}

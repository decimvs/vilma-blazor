
<li>
    <a class="@_cssClasses" href="@Href">
        @if(TextTemplate != null)
        {
            @TextTemplate
        }
        else
        {
            @Text
        }
    </a>
</li>

@code {
    /// <summary>
    /// Gets or sets the HREF attribute of the link.
    /// </summary>
    [Parameter] public string Href { get; set; } = "";

    /// <summary>
    /// Gets or sets the text of the link.
    /// </summary>
    [Parameter] public string Text { get; set; } = "";

    /// <summary>
    /// Gets or sets the link text content as HTML or Blazor markup.
    /// </summary>
    [Parameter] public RenderFragment? TextTemplate { get; set; }

    /// <summary>
    /// Sets this element as disabled.
    /// </summary>
    [Parameter] public bool Disabled { get; set; }

    /// <summary>
    /// Gets or sets the css classes of the link.
    /// </summary>
    [Parameter] public string? CssClasses { get; set; }

    private CssClassCollection _cssClasses = new CssClassCollection();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        _cssClasses.Clear();

        _cssClasses.Add("dropdown-item");

        if (Disabled)
            _cssClasses.Add("disabled");

        _cssClasses.AddClasses(CssClasses);
    }
}

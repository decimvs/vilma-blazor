@inject IJSRuntime _jsRuntime
@inherits VilmaCollapsibleComponent

<div class="accordion-item">
    <h2 class="accordion-header" id="@_headerId">
        <button class="@_buttonCss" type="button" data-bs-toggle="collapse" data-bs-target="@($"#{_bodyId}")" aria-controls="@_bodyId">
            @if (TitleTemplate != null)
            {
                @TitleTemplate
            }
            else
            {
                @Title
            }
        </button>
    </h2>
    <div id="@_bodyId" class="@_bodyBaseCss" aria-labelledby="@_headerId" @ref="_collapsibleItem" @attributes="_bodyAttributes">
        <div class="@_bodyExtendedCss">
            @if (BodyTemplate != null)
            {
                @BodyTemplate
            }
            else
            {
                @Content
            }
        </div>
    </div>
</div>

@code {
    /// <summary>
    /// Gets or sets the title of the accordion item. If you want to use HTML or other components
    /// use TitleTemplate property instead.
    /// </summary>
    [Parameter] public string? Title { get; set; }

    /// <summary>
    /// Gets or sets the title of the accordion item defined by pure HTML or other components.
    /// </summary>
    [Parameter] public RenderFragment? TitleTemplate { get; set; }

    /// <summary>
    /// Gets or sets the text content of the accordion item. If you want to use HTML or other components 
    /// use BodyTemplate property instead.
    /// </summary>
    [Parameter] public string? Content { get; set; }

    /// <summary>
    /// Gets or sets the content of the accordion item defined by pure HTML or other components.
    /// </summary>
    [Parameter] public RenderFragment? BodyTemplate { get; set; }

    /// <summary>
    /// Sets additional CSS classes for the body.
    /// </summary>
    [Parameter] public string? BodyCss {get; set;}


    [CascadingParameter] protected VilmaAccordion Parent { get; set; }

    private Dictionary<string, object> _bodyAttributes = new Dictionary<string, object>();
    //private ElementReference? _accordionItem;

    private string _headerId = Guid.NewGuid().ToString();
    private string _bodyId = Guid.NewGuid().ToString();

    private CssClassCollection _bodyBaseCss = new CssClassCollection();
    private CssClassCollection _bodyExtendedCss = new CssClassCollection();
    private CssClassCollection _buttonCss = new CssClassCollection();

    protected override void OnParametersSet()
    {
        _bodyAttributes.Clear();
        _bodyBaseCss.Clear();
        _bodyExtendedCss.Clear();
        _buttonCss.Clear();

        _bodyBaseCss.AddClasses("accordion-collapse collapse");
        _buttonCss.Add("accordion-button");

        if (SetOpen)
            _bodyBaseCss.Add("show");
        else
            _buttonCss.Add("collapsed");

        if (!Parent.AllowMultipleOpen)
            _bodyAttributes.Add("data-bs-parent", $"#{Parent.AccordionGuid}");

        _bodyExtendedCss.Add("accordion-body");
        _bodyExtendedCss.AddClasses(BodyCss);
    }
}

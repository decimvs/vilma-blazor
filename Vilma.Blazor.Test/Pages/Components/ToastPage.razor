@inject VilmaToastService _toastService

<button type="button" @onclick="@(() => _toastService.AddToast($"Test alert {_alertCtr++}"))">Add alert standard</button>
<button type="button" @onclick="@(() => _toastService.AddToast($"Test alert {_alertCtr++}", colorScheme: ComponentStyle.Warning))">Add alert Warning</button>
<button type="button" @onclick="AddAlertRenderFragment">Add alert Render fragment</button>
<button type="button" @onclick="AddAlertHeaderRenderFragment">Add alert header Render fragment</button>

@code {
    private int _alertCtr = 1;

    private void AddAlertRenderFragment()
    {
        var toast = new Toast()
            {
                BodyTemplate = (__builder) =>
                {
                <p><strong>Test value @_alertCtr</strong></p>
                <p>Dinamically set content</p>
            },
            ColorScheme = ComponentStyle.Success,
            ShowCloseButton = true,
            Autohide = false
        };

        _toastService.AddToast(toast);
        _alertCtr++;
    }

    private void AddAlertHeaderRenderFragment()
    {
        var toast = new Toast()
            {
                BodyTemplate = (__builder) =>
                {
                <p><strong>Test value @_alertCtr</strong></p>
                <p>Dinamically set content</p>
            },
            HeaderTemplate = (__builder) =>
            {
                <strong class="me-auto">Dynamic Header</strong>
                <small class="text-muted">just now</small>
            },
            ColorScheme = ComponentStyle.None,
            ShowCloseButton = true,
        };

        _toastService.AddToast(toast);
        _alertCtr++;
    }
}
